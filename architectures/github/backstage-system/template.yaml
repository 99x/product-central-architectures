apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: backstage-system-template
  title: Create a Backstage System entity
  description: Create a Backstage System entity
  tags:
    - backstage
    - system
spec:
  owner: user:99xadmin
  system: ProductCentral
  type: service

  parameters:
    - title: Provide information about the new component
      required:
        - orgName
        - repoName
        - owner
        - systemName
        - systemTitle
      properties:
        orgName:
          title: GitHub Organization
          type: string
        repoName:
          title: Repository Name
          type: string
        owner:
          title: Owner
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
        systemName:
          title: System Name
          type: string
        systemTitle:
          title: System Title
          type: string
  steps:
    - id: sourceCodeTemplate
      name: Generating the Source Code Component
      action: fetch:template
      input:
        url: ./skeleton
        values:
          orgName: ${{ parameters.orgName }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          systemName: ${{ parameters.systemName }}
          systemTitle: ${{ parameters.systemTitle }}

    - id: publish
      name: Publishing to the Source Code Repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        repoUrl: github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.repoName }}
        defaultBranch: main

    - id: register
      name: Registering the Catalog Info Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /all.yaml

  output:
    links:
      - title: Open the Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open the Catalog Info Component
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
