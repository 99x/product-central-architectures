name: Client CD
on:
  push:
    branches:
      - development
      - demo
      - release

permissions:
  actions: read
  contents: read

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build Apps
        env:
          NEXT_PRIVATE_LOCAL_WEBPACK: true
        run: |
          case "${{ github.ref_name }}" in
            development)
              export APP_ENV=dev
              ;;
            demo)
              export APP_ENV=demo
              ;;
            release)
              export APP_ENV=prod
              ;;
            *)
          esac
          yarn build:all

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Core and Troubleshooting Apps to S3
        run: |
          case "${{ github.ref_name }}" in
            development)
              AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET_DEVELOPMENT }}
              ;;
            demo)
              AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET_DEMO }}
              ;;
            release)
              AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET_PRODUCTION }}
              ;;
          esac
          aws s3 sync ./dist/apps/core/.next $AWS_S3_BUCKET --region ${{ secrets.AWS_REGION }} --delete

      - name: Invalidate CloudFront Cache for Core and Troubleshooting Apps
        run: |
          case "${{ github.ref_name }}" in
            development)
              AWS_CLOUDFRONT_DISTRIBUTION_ID=${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID_DEVELOPMENT }}
              ;;
            demo)
              AWS_CLOUDFRONT_DISTRIBUTION_ID=${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID_DEMO }}
              ;;
            release)
              AWS_CLOUDFRONT_DISTRIBUTION_ID=${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID_PRODUCTION }}
              ;;
          esac
          aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
